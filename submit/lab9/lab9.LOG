Script started on 2020-11-01 16:07:51-05:00 [TERM="xterm-256color" TTY="/dev/pts/4" COLUMNS="122" LINES="36"]
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9$ cd exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd rotate
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rotate$ emasc[K[Kcs rotate.c
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rotate$ ro[K[Kmake
cc -S -Wall -Og -std=c11 rotate.c
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rotate$ emacs rotate.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rotate$ cd -
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd[K[Kls
1  2  3  4  5  6  cpuid1  cpuid2  parity  rip  rotate  rsp
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd cpuid1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/cpuid1$ emacs cpuid.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/cpuid1$ make
cc -g -Wall -std=c11 -Og   -c -o main.o main.c
cc -c -g -Wall -std=c11 -Og cpuid.s -o cpuid.o
cc main.o cpuid.o -o cpuid
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/cpuid1$ ./cpuid
cpuid: eax = 0x14; ebx = 0x756e6547; edx = 0x49656e69; ecx = 0x6c65746e
vendor: GenuineIntel
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/cpuid1$ cd cpuid[K[K[K[K[K[K -
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd cpuid2
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/cpuid2$ eacs[K[K[Kmace[Ks cp[K[Kmain.c
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/cpuid2$ emacs cpuid.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/cpuid2$ cd - 
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -g -Wall -std=c11 -Og   -c -o main.o main.c
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
parity.s: Assembler messages:
parity.s:5: Error: bad register name `%0x1'
make: *** [Makefile:9: parity.o] Error 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity
usage: ./parity INT1...
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1
parity(1) = 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./oar[K[K[Kparity 0
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ em[Kn[Kx[K[Kemacs parity.x
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.x[Ks
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1[K2
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 2[K0
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ objdump parity
Usage: objdump <option(s)> <file(s)>
 Display information from object <file(s)>.
 At least one of the following switches must be given:
  -a, --archive-headers    Display archive header information
  -f, --file-headers       Display the contents of the overall file header
  -p, --private-headers    Display object format specific file header contents
  -P, --private=OPT,OPT... Display object format specific contents
  -h, --[section-]headers  Display the contents of the section headers
  -x, --all-headers        Display the contents of all headers
  -d, --disassemble        Display assembler contents of executable sections
  -D, --disassemble-all    Display assembler contents of all sections
  -S, --source             Intermix source code with disassembly
  -s, --full-contents      Display the full contents of all sections requested
  -g, --debugging          Display debug information in object file
  -e, --debugging-tags     Display debug information using ctags style
  -G, --stabs              Display (in raw form) any STABS info in the file
  -W[lLiaprmfFsoRtUuTgAckK] or
  --dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,
          =frames-interp,=str,=loc,=Ranges,=pubtypes,
          =gdb_index,=trace_info,=trace_abbrev,=trace_aranges,
          =addr,=cu_index,=links,=follow-links]
                           Display DWARF info in the file
  -t, --syms               Display the contents of the symbol table(s)
  -T, --dynamic-syms       Display the contents of the dynamic symbol table
  -r, --reloc              Display the relocation entries in the file
  -R, --dynamic-reloc      Display the dynamic relocation entries in the file
  @<file>                  Read options from <file>
  -v, --version            Display this program's version number
  -i, --info               List object formats and architectures supported
  -H, --help               Display this information
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ objdump parity-paritydparity parity

parity:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <fprintf@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <fprintf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <strtol@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <strtol@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <exit@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <exit@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	31 ed                	xor    %ebp,%ebp
    1082:	49 89 d1             	mov    %rdx,%r9
    1085:	5e                   	pop    %rsi
    1086:	48 89 e2             	mov    %rsp,%rdx
    1089:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    108d:	50                   	push   %rax
    108e:	54                   	push   %rsp
    108f:	4c 8d 05 da 01 00 00 	lea    0x1da(%rip),%r8        # 1270 <__libc_csu_fini>
    1096:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 1210 <__libc_csu_init>
    109d:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1165 <main>
    10a4:	ff 15 36 2f 00 00    	callq  *0x2f36(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10aa:	f4                   	hlt    
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 91 2f 00 00 	lea    0x2f91(%rip),%rdi        # 4048 <__TMC_END__>
    10b7:	48 8d 05 8a 2f 00 00 	lea    0x2f8a(%rip),%rax        # 4048 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 61 2f 00 00 	lea    0x2f61(%rip),%rdi        # 4048 <__TMC_END__>
    10e7:	48 8d 35 5a 2f 00 00 	lea    0x2f5a(%rip),%rsi        # 4048 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 c1 fe 03          	sar    $0x3,%rsi
    10f5:	48 89 f0             	mov    %rsi,%rax
    10f8:	48 c1 e8 3f          	shr    $0x3f,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	80 3d 41 2f 00 00 00 	cmpb   $0x0,0x2f41(%rip)        # 4068 <completed.7325>
    1127:	75 2f                	jne    1158 <__do_global_dtors_aux+0x38>
    1129:	55                   	push   %rbp
    112a:	48 83 3d c6 2e 00 00 	cmpq   $0x0,0x2ec6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1131:	00 
    1132:	48 89 e5             	mov    %rsp,%rbp
    1135:	74 0c                	je     1143 <__do_global_dtors_aux+0x23>
    1137:	48 8b 3d 02 2f 00 00 	mov    0x2f02(%rip),%rdi        # 4040 <__dso_handle>
    113e:	e8 2d ff ff ff       	callq  1070 <__cxa_finalize@plt>
    1143:	e8 68 ff ff ff       	callq  10b0 <deregister_tm_clones>
    1148:	c6 05 19 2f 00 00 01 	movb   $0x1,0x2f19(%rip)        # 4068 <completed.7325>
    114f:	5d                   	pop    %rbp
    1150:	c3                   	retq   
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	e9 7b ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001165 <main>:
    1165:	41 55                	push   %r13
    1167:	41 54                	push   %r12
    1169:	55                   	push   %rbp
    116a:	53                   	push   %rbx
    116b:	48 83 ec 08          	sub    $0x8,%rsp
    116f:	49 89 f5             	mov    %rsi,%r13
    1172:	83 ff 01             	cmp    $0x1,%edi
    1175:	7e 48                	jle    11bf <main+0x5a>
    1177:	41 89 fc             	mov    %edi,%r12d
    117a:	bb 01 00 00 00       	mov    $0x1,%ebx
    117f:	44 39 e3             	cmp    %r12d,%ebx
    1182:	7d 60                	jge    11e4 <main+0x7f>
    1184:	48 63 c3             	movslq %ebx,%rax
    1187:	49 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%rdi
    118c:	ba 0a 00 00 00       	mov    $0xa,%edx
    1191:	be 00 00 00 00       	mov    $0x0,%esi
    1196:	e8 b5 fe ff ff       	callq  1050 <strtol@plt>
    119b:	48 89 c5             	mov    %rax,%rbp
    119e:	89 c7                	mov    %eax,%edi
    11a0:	e8 4f 00 00 00       	callq  11f4 <get_parity>
    11a5:	89 c2                	mov    %eax,%edx
    11a7:	89 ee                	mov    %ebp,%esi
    11a9:	48 8d 3d 67 0e 00 00 	lea    0xe67(%rip),%rdi        # 2017 <_IO_stdin_used+0x17>
    11b0:	b8 00 00 00 00       	mov    $0x0,%eax
    11b5:	e8 76 fe ff ff       	callq  1030 <printf@plt>
    11ba:	83 c3 01             	add    $0x1,%ebx
    11bd:	eb c0                	jmp    117f <main+0x1a>
    11bf:	48 8b 16             	mov    (%rsi),%rdx
    11c2:	48 8d 35 3b 0e 00 00 	lea    0xe3b(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    11c9:	48 8b 3d 90 2e 00 00 	mov    0x2e90(%rip),%rdi        # 4060 <stderr@@GLIBC_2.2.5>
    11d0:	b8 00 00 00 00       	mov    $0x0,%eax
    11d5:	e8 66 fe ff ff       	callq  1040 <fprintf@plt>
    11da:	bf 01 00 00 00       	mov    $0x1,%edi
    11df:	e8 7c fe ff ff       	callq  1060 <exit@plt>
    11e4:	b8 00 00 00 00       	mov    $0x0,%eax
    11e9:	48 83 c4 08          	add    $0x8,%rsp
    11ed:	5b                   	pop    %rbx
    11ee:	5d                   	pop    %rbp
    11ef:	41 5c                	pop    %r12
    11f1:	41 5d                	pop    %r13
    11f3:	c3                   	retq   

00000000000011f4 <get_parity>:
    11f4:	85 3c 25 01 00 00 00 	test   %edi,0x1
    11fb:	75 07                	jne    1204 <ODD_NUM>
    11fd:	89 04 25 01 00 00 00 	mov    %eax,0x1

0000000000001204 <ODD_NUM>:
    1204:	c3                   	retq   
    1205:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    120c:	00 00 00 
    120f:	90                   	nop

0000000000001210 <__libc_csu_init>:
    1210:	41 57                	push   %r15
    1212:	49 89 d7             	mov    %rdx,%r15
    1215:	41 56                	push   %r14
    1217:	49 89 f6             	mov    %rsi,%r14
    121a:	41 55                	push   %r13
    121c:	41 89 fd             	mov    %edi,%r13d
    121f:	41 54                	push   %r12
    1221:	4c 8d 25 c0 2b 00 00 	lea    0x2bc0(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1228:	55                   	push   %rbp
    1229:	48 8d 2d c0 2b 00 00 	lea    0x2bc0(%rip),%rbp        # 3df0 <__init_array_end>
    1230:	53                   	push   %rbx
    1231:	4c 29 e5             	sub    %r12,%rbp
    1234:	48 83 ec 08          	sub    $0x8,%rsp
    1238:	e8 c3 fd ff ff       	callq  1000 <_init>
    123d:	48 c1 fd 03          	sar    $0x3,%rbp
    1241:	74 1b                	je     125e <__libc_csu_init+0x4e>
    1243:	31 db                	xor    %ebx,%ebx
    1245:	0f 1f 00             	nopl   (%rax)
    1248:	4c 89 fa             	mov    %r15,%rdx
    124b:	4c 89 f6             	mov    %r14,%rsi
    124e:	44 89 ef             	mov    %r13d,%edi
    1251:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1255:	48 83 c3 01          	add    $0x1,%rbx
    1259:	48 39 dd             	cmp    %rbx,%rbp
    125c:	75 ea                	jne    1248 <__libc_csu_init+0x38>
    125e:	48 83 c4 08          	add    $0x8,%rsp
    1262:	5b                   	pop    %rbx
    1263:	5d                   	pop    %rbp
    1264:	41 5c                	pop    %r12
    1266:	41 5d                	pop    %r13
    1268:	41 5e                	pop    %r14
    126a:	41 5f                	pop    %r15
    126c:	c3                   	retq   
    126d:	0f 1f 00             	nopl   (%rax)

0000000000001270 <__libc_csu_fini>:
    1270:	c3                   	retq   

Disassembly of section .fini:

0000000000001274 <_fini>:
    1274:	48 83 ec 08          	sub    $0x8,%rsp
    1278:	48 83 c4 08          	add    $0x8,%rsp
    127c:	c3                   	retq   
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ 
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make[K[K[K[Kemacs parity.c[Ks
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
parity.s: Assembler messages:
parity.s:6: Error: operand type mismatch for `jnz'
make: *** [Makefile:9: parity.o] Error 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ em[K[Kobjdump parity.s
Usage: objdump <option(s)> <file(s)>
 Display information from object <file(s)>.
 At least one of the following switches must be given:
  -a, --archive-headers    Display archive header information
  -f, --file-headers       Display the contents of the overall file header
  -p, --private-headers    Display object format specific file header contents
  -P, --private=OPT,OPT... Display object format specific contents
  -h, --[section-]headers  Display the contents of the section headers
  -x, --all-headers        Display the contents of all headers
  -d, --disassemble        Display assembler contents of executable sections
  -D, --disassemble-all    Display assembler contents of all sections
  -S, --source             Intermix source code with disassembly
  -s, --full-contents      Display the full contents of all sections requested
  -g, --debugging          Display debug information in object file
  -e, --debugging-tags     Display debug information using ctags style
  -G, --stabs              Display (in raw form) any STABS info in the file
  -W[lLiaprmfFsoRtUuTgAckK] or
  --dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,
          =frames-interp,=str,=loc,=Ranges,=pubtypes,
          =gdb_index,=trace_info,=trace_abbrev,=trace_aranges,
          =addr,=cu_index,=links,=follow-links]
                           Display DWARF info in the file
  -t, --syms               Display the contents of the symbol table(s)
  -T, --dynamic-syms       Display the contents of the dynamic symbol table
  -r, --reloc              Display the relocation entries in the file
  -R, --dynamic-reloc      Display the dynamic relocation entries in the file
  @<file>                  Read options from <file>
  -v, --version            Display this program's version number
  -i, --info               List object formats and architectures supported
  -H, --help               Display this information
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ objdump parity.s-parity.sdparity.s parity.s
objdump: parity.s: file format not recognized
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ objdump -d parity.s[C[K[K

parity:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <fprintf@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <fprintf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <strtol@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <strtol@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <exit@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <exit@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	31 ed                	xor    %ebp,%ebp
    1082:	49 89 d1             	mov    %rdx,%r9
    1085:	5e                   	pop    %rsi
    1086:	48 89 e2             	mov    %rsp,%rdx
    1089:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    108d:	50                   	push   %rax
    108e:	54                   	push   %rsp
    108f:	4c 8d 05 da 01 00 00 	lea    0x1da(%rip),%r8        # 1270 <__libc_csu_fini>
    1096:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 1210 <__libc_csu_init>
    109d:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1165 <main>
    10a4:	ff 15 36 2f 00 00    	callq  *0x2f36(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10aa:	f4                   	hlt    
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 91 2f 00 00 	lea    0x2f91(%rip),%rdi        # 4048 <__TMC_END__>
    10b7:	48 8d 05 8a 2f 00 00 	lea    0x2f8a(%rip),%rax        # 4048 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 61 2f 00 00 	lea    0x2f61(%rip),%rdi        # 4048 <__TMC_END__>
    10e7:	48 8d 35 5a 2f 00 00 	lea    0x2f5a(%rip),%rsi        # 4048 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 c1 fe 03          	sar    $0x3,%rsi
    10f5:	48 89 f0             	mov    %rsi,%rax
    10f8:	48 c1 e8 3f          	shr    $0x3f,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	80 3d 41 2f 00 00 00 	cmpb   $0x0,0x2f41(%rip)        # 4068 <completed.7325>
    1127:	75 2f                	jne    1158 <__do_global_dtors_aux+0x38>
    1129:	55                   	push   %rbp
    112a:	48 83 3d c6 2e 00 00 	cmpq   $0x0,0x2ec6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1131:	00 
    1132:	48 89 e5             	mov    %rsp,%rbp
    1135:	74 0c                	je     1143 <__do_global_dtors_aux+0x23>
    1137:	48 8b 3d 02 2f 00 00 	mov    0x2f02(%rip),%rdi        # 4040 <__dso_handle>
    113e:	e8 2d ff ff ff       	callq  1070 <__cxa_finalize@plt>
    1143:	e8 68 ff ff ff       	callq  10b0 <deregister_tm_clones>
    1148:	c6 05 19 2f 00 00 01 	movb   $0x1,0x2f19(%rip)        # 4068 <completed.7325>
    114f:	5d                   	pop    %rbp
    1150:	c3                   	retq   
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	e9 7b ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001165 <main>:
    1165:	41 55                	push   %r13
    1167:	41 54                	push   %r12
    1169:	55                   	push   %rbp
    116a:	53                   	push   %rbx
    116b:	48 83 ec 08          	sub    $0x8,%rsp
    116f:	49 89 f5             	mov    %rsi,%r13
    1172:	83 ff 01             	cmp    $0x1,%edi
    1175:	7e 48                	jle    11bf <main+0x5a>
    1177:	41 89 fc             	mov    %edi,%r12d
    117a:	bb 01 00 00 00       	mov    $0x1,%ebx
    117f:	44 39 e3             	cmp    %r12d,%ebx
    1182:	7d 60                	jge    11e4 <main+0x7f>
    1184:	48 63 c3             	movslq %ebx,%rax
    1187:	49 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%rdi
    118c:	ba 0a 00 00 00       	mov    $0xa,%edx
    1191:	be 00 00 00 00       	mov    $0x0,%esi
    1196:	e8 b5 fe ff ff       	callq  1050 <strtol@plt>
    119b:	48 89 c5             	mov    %rax,%rbp
    119e:	89 c7                	mov    %eax,%edi
    11a0:	e8 4f 00 00 00       	callq  11f4 <get_parity>
    11a5:	89 c2                	mov    %eax,%edx
    11a7:	89 ee                	mov    %ebp,%esi
    11a9:	48 8d 3d 67 0e 00 00 	lea    0xe67(%rip),%rdi        # 2017 <_IO_stdin_used+0x17>
    11b0:	b8 00 00 00 00       	mov    $0x0,%eax
    11b5:	e8 76 fe ff ff       	callq  1030 <printf@plt>
    11ba:	83 c3 01             	add    $0x1,%ebx
    11bd:	eb c0                	jmp    117f <main+0x1a>
    11bf:	48 8b 16             	mov    (%rsi),%rdx
    11c2:	48 8d 35 3b 0e 00 00 	lea    0xe3b(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    11c9:	48 8b 3d 90 2e 00 00 	mov    0x2e90(%rip),%rdi        # 4060 <stderr@@GLIBC_2.2.5>
    11d0:	b8 00 00 00 00       	mov    $0x0,%eax
    11d5:	e8 66 fe ff ff       	callq  1040 <fprintf@plt>
    11da:	bf 01 00 00 00       	mov    $0x1,%edi
    11df:	e8 7c fe ff ff       	callq  1060 <exit@plt>
    11e4:	b8 00 00 00 00       	mov    $0x0,%eax
    11e9:	48 83 c4 08          	add    $0x8,%rsp
    11ed:	5b                   	pop    %rbx
    11ee:	5d                   	pop    %rbp
    11ef:	41 5c                	pop    %r12
    11f1:	41 5d                	pop    %r13
    11f3:	c3                   	retq   

00000000000011f4 <get_parity>:
    11f4:	85 3c 25 01 00 00 00 	test   %edi,0x1
    11fb:	75 07                	jne    1204 <ODD_NUM>
    11fd:	89 04 25 01 00 00 00 	mov    %eax,0x1

0000000000001204 <ODD_NUM>:
    1204:	c3                   	retq   
    1205:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    120c:	00 00 00 
    120f:	90                   	nop

0000000000001210 <__libc_csu_init>:
    1210:	41 57                	push   %r15
    1212:	49 89 d7             	mov    %rdx,%r15
    1215:	41 56                	push   %r14
    1217:	49 89 f6             	mov    %rsi,%r14
    121a:	41 55                	push   %r13
    121c:	41 89 fd             	mov    %edi,%r13d
    121f:	41 54                	push   %r12
    1221:	4c 8d 25 c0 2b 00 00 	lea    0x2bc0(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1228:	55                   	push   %rbp
    1229:	48 8d 2d c0 2b 00 00 	lea    0x2bc0(%rip),%rbp        # 3df0 <__init_array_end>
    1230:	53                   	push   %rbx
    1231:	4c 29 e5             	sub    %r12,%rbp
    1234:	48 83 ec 08          	sub    $0x8,%rsp
    1238:	e8 c3 fd ff ff       	callq  1000 <_init>
    123d:	48 c1 fd 03          	sar    $0x3,%rbp
    1241:	74 1b                	je     125e <__libc_csu_init+0x4e>
    1243:	31 db                	xor    %ebx,%ebx
    1245:	0f 1f 00             	nopl   (%rax)
    1248:	4c 89 fa             	mov    %r15,%rdx
    124b:	4c 89 f6             	mov    %r14,%rsi
    124e:	44 89 ef             	mov    %r13d,%edi
    1251:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1255:	48 83 c3 01          	add    $0x1,%rbx
    1259:	48 39 dd             	cmp    %rbx,%rbp
    125c:	75 ea                	jne    1248 <__libc_csu_init+0x38>
    125e:	48 83 c4 08          	add    $0x8,%rsp
    1262:	5b                   	pop    %rbx
    1263:	5d                   	pop    %rbp
    1264:	41 5c                	pop    %r12
    1266:	41 5d                	pop    %r13
    1268:	41 5e                	pop    %r14
    126a:	41 5f                	pop    %r15
    126c:	c3                   	retq   
    126d:	0f 1f 00             	nopl   (%rax)

0000000000001270 <__libc_csu_fini>:
    1270:	c3                   	retq   

Disassembly of section .fini:

0000000000001274 <_fini>:
    1274:	48 83 ec 08          	sub    $0x8,%rsp
    1278:	48 83 c4 08          	add    $0x8,%rsp
    127c:	c3                   	retq   
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ play[K[K[K[K./parity 0
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 0[K1
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ objdump parity-paritydparity parity

parity:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <fprintf@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <fprintf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <strtol@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <strtol@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <exit@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <exit@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	31 ed                	xor    %ebp,%ebp
    1082:	49 89 d1             	mov    %rdx,%r9
    1085:	5e                   	pop    %rsi
    1086:	48 89 e2             	mov    %rsp,%rdx
    1089:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    108d:	50                   	push   %rax
    108e:	54                   	push   %rsp
    108f:	4c 8d 05 da 01 00 00 	lea    0x1da(%rip),%r8        # 1270 <__libc_csu_fini>
    1096:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 1210 <__libc_csu_init>
    109d:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1165 <main>
    10a4:	ff 15 36 2f 00 00    	callq  *0x2f36(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10aa:	f4                   	hlt    
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 91 2f 00 00 	lea    0x2f91(%rip),%rdi        # 4048 <__TMC_END__>
    10b7:	48 8d 05 8a 2f 00 00 	lea    0x2f8a(%rip),%rax        # 4048 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 61 2f 00 00 	lea    0x2f61(%rip),%rdi        # 4048 <__TMC_END__>
    10e7:	48 8d 35 5a 2f 00 00 	lea    0x2f5a(%rip),%rsi        # 4048 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 c1 fe 03          	sar    $0x3,%rsi
    10f5:	48 89 f0             	mov    %rsi,%rax
    10f8:	48 c1 e8 3f          	shr    $0x3f,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	80 3d 41 2f 00 00 00 	cmpb   $0x0,0x2f41(%rip)        # 4068 <completed.7325>
    1127:	75 2f                	jne    1158 <__do_global_dtors_aux+0x38>
    1129:	55                   	push   %rbp
    112a:	48 83 3d c6 2e 00 00 	cmpq   $0x0,0x2ec6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1131:	00 
    1132:	48 89 e5             	mov    %rsp,%rbp
    1135:	74 0c                	je     1143 <__do_global_dtors_aux+0x23>
    1137:	48 8b 3d 02 2f 00 00 	mov    0x2f02(%rip),%rdi        # 4040 <__dso_handle>
    113e:	e8 2d ff ff ff       	callq  1070 <__cxa_finalize@plt>
    1143:	e8 68 ff ff ff       	callq  10b0 <deregister_tm_clones>
    1148:	c6 05 19 2f 00 00 01 	movb   $0x1,0x2f19(%rip)        # 4068 <completed.7325>
    114f:	5d                   	pop    %rbp
    1150:	c3                   	retq   
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	e9 7b ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001165 <main>:
    1165:	41 55                	push   %r13
    1167:	41 54                	push   %r12
    1169:	55                   	push   %rbp
    116a:	53                   	push   %rbx
    116b:	48 83 ec 08          	sub    $0x8,%rsp
    116f:	49 89 f5             	mov    %rsi,%r13
    1172:	83 ff 01             	cmp    $0x1,%edi
    1175:	7e 48                	jle    11bf <main+0x5a>
    1177:	41 89 fc             	mov    %edi,%r12d
    117a:	bb 01 00 00 00       	mov    $0x1,%ebx
    117f:	44 39 e3             	cmp    %r12d,%ebx
    1182:	7d 60                	jge    11e4 <main+0x7f>
    1184:	48 63 c3             	movslq %ebx,%rax
    1187:	49 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%rdi
    118c:	ba 0a 00 00 00       	mov    $0xa,%edx
    1191:	be 00 00 00 00       	mov    $0x0,%esi
    1196:	e8 b5 fe ff ff       	callq  1050 <strtol@plt>
    119b:	48 89 c5             	mov    %rax,%rbp
    119e:	89 c7                	mov    %eax,%edi
    11a0:	e8 4f 00 00 00       	callq  11f4 <get_parity>
    11a5:	89 c2                	mov    %eax,%edx
    11a7:	89 ee                	mov    %ebp,%esi
    11a9:	48 8d 3d 67 0e 00 00 	lea    0xe67(%rip),%rdi        # 2017 <_IO_stdin_used+0x17>
    11b0:	b8 00 00 00 00       	mov    $0x0,%eax
    11b5:	e8 76 fe ff ff       	callq  1030 <printf@plt>
    11ba:	83 c3 01             	add    $0x1,%ebx
    11bd:	eb c0                	jmp    117f <main+0x1a>
    11bf:	48 8b 16             	mov    (%rsi),%rdx
    11c2:	48 8d 35 3b 0e 00 00 	lea    0xe3b(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    11c9:	48 8b 3d 90 2e 00 00 	mov    0x2e90(%rip),%rdi        # 4060 <stderr@@GLIBC_2.2.5>
    11d0:	b8 00 00 00 00       	mov    $0x0,%eax
    11d5:	e8 66 fe ff ff       	callq  1040 <fprintf@plt>
    11da:	bf 01 00 00 00       	mov    $0x1,%edi
    11df:	e8 7c fe ff ff       	callq  1060 <exit@plt>
    11e4:	b8 00 00 00 00       	mov    $0x0,%eax
    11e9:	48 83 c4 08          	add    $0x8,%rsp
    11ed:	5b                   	pop    %rbx
    11ee:	5d                   	pop    %rbp
    11ef:	41 5c                	pop    %r12
    11f1:	41 5d                	pop    %r13
    11f3:	c3                   	retq   

00000000000011f4 <get_parity>:
    11f4:	85 3c 25 01 00 00 00 	test   %edi,0x1
    11fb:	0f 85 b0 f2 ff ff    	jne    4b1 <_init-0xb4f>
    1201:	89 04 25 01 00 00 00 	mov    %eax,0x1
    1208:	c3                   	retq   
    1209:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001210 <__libc_csu_init>:
    1210:	41 57                	push   %r15
    1212:	49 89 d7             	mov    %rdx,%r15
    1215:	41 56                	push   %r14
    1217:	49 89 f6             	mov    %rsi,%r14
    121a:	41 55                	push   %r13
    121c:	41 89 fd             	mov    %edi,%r13d
    121f:	41 54                	push   %r12
    1221:	4c 8d 25 c0 2b 00 00 	lea    0x2bc0(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1228:	55                   	push   %rbp
    1229:	48 8d 2d c0 2b 00 00 	lea    0x2bc0(%rip),%rbp        # 3df0 <__init_array_end>
    1230:	53                   	push   %rbx
    1231:	4c 29 e5             	sub    %r12,%rbp
    1234:	48 83 ec 08          	sub    $0x8,%rsp
    1238:	e8 c3 fd ff ff       	callq  1000 <_init>
    123d:	48 c1 fd 03          	sar    $0x3,%rbp
    1241:	74 1b                	je     125e <__libc_csu_init+0x4e>
    1243:	31 db                	xor    %ebx,%ebx
    1245:	0f 1f 00             	nopl   (%rax)
    1248:	4c 89 fa             	mov    %r15,%rdx
    124b:	4c 89 f6             	mov    %r14,%rsi
    124e:	44 89 ef             	mov    %r13d,%edi
    1251:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1255:	48 83 c3 01          	add    $0x1,%rbx
    1259:	48 39 dd             	cmp    %rbx,%rbp
    125c:	75 ea                	jne    1248 <__libc_csu_init+0x38>
    125e:	48 83 c4 08          	add    $0x8,%rsp
    1262:	5b                   	pop    %rbx
    1263:	5d                   	pop    %rbp
    1264:	41 5c                	pop    %r12
    1266:	41 5d                	pop    %r13
    1268:	41 5e                	pop    %r14
    126a:	41 5f                	pop    %r15
    126c:	c3                   	retq   
    126d:	0f 1f 00             	nopl   (%rax)

0000000000001270 <__libc_csu_fini>:
    1270:	c3                   	retq   

Disassembly of section .fini:

0000000000001274 <_fini>:
    1274:	48 83 ec 08          	sub    $0x8,%rsp
    1278:	48 83 c4 08          	add    $0x8,%rsp
    127c:	c3                   	retq   
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./ [Kparity 1 2 3 4 5 6
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ objdump parity-paritydparity parity

parity:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <fprintf@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <fprintf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <strtol@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <strtol@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <exit@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <exit@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	31 ed                	xor    %ebp,%ebp
    1082:	49 89 d1             	mov    %rdx,%r9
    1085:	5e                   	pop    %rsi
    1086:	48 89 e2             	mov    %rsp,%rdx
    1089:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    108d:	50                   	push   %rax
    108e:	54                   	push   %rsp
    108f:	4c 8d 05 da 01 00 00 	lea    0x1da(%rip),%r8        # 1270 <__libc_csu_fini>
    1096:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 1210 <__libc_csu_init>
    109d:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1165 <main>
    10a4:	ff 15 36 2f 00 00    	callq  *0x2f36(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10aa:	f4                   	hlt    
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 91 2f 00 00 	lea    0x2f91(%rip),%rdi        # 4048 <__TMC_END__>
    10b7:	48 8d 05 8a 2f 00 00 	lea    0x2f8a(%rip),%rax        # 4048 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 61 2f 00 00 	lea    0x2f61(%rip),%rdi        # 4048 <__TMC_END__>
    10e7:	48 8d 35 5a 2f 00 00 	lea    0x2f5a(%rip),%rsi        # 4048 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 c1 fe 03          	sar    $0x3,%rsi
    10f5:	48 89 f0             	mov    %rsi,%rax
    10f8:	48 c1 e8 3f          	shr    $0x3f,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	80 3d 41 2f 00 00 00 	cmpb   $0x0,0x2f41(%rip)        # 4068 <completed.7325>
    1127:	75 2f                	jne    1158 <__do_global_dtors_aux+0x38>
    1129:	55                   	push   %rbp
    112a:	48 83 3d c6 2e 00 00 	cmpq   $0x0,0x2ec6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1131:	00 
    1132:	48 89 e5             	mov    %rsp,%rbp
    1135:	74 0c                	je     1143 <__do_global_dtors_aux+0x23>
    1137:	48 8b 3d 02 2f 00 00 	mov    0x2f02(%rip),%rdi        # 4040 <__dso_handle>
    113e:	e8 2d ff ff ff       	callq  1070 <__cxa_finalize@plt>
    1143:	e8 68 ff ff ff       	callq  10b0 <deregister_tm_clones>
    1148:	c6 05 19 2f 00 00 01 	movb   $0x1,0x2f19(%rip)        # 4068 <completed.7325>
    114f:	5d                   	pop    %rbp
    1150:	c3                   	retq   
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	e9 7b ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001165 <main>:
    1165:	41 55                	push   %r13
    1167:	41 54                	push   %r12
    1169:	55                   	push   %rbp
    116a:	53                   	push   %rbx
    116b:	48 83 ec 08          	sub    $0x8,%rsp
    116f:	49 89 f5             	mov    %rsi,%r13
    1172:	83 ff 01             	cmp    $0x1,%edi
    1175:	7e 48                	jle    11bf <main+0x5a>
    1177:	41 89 fc             	mov    %edi,%r12d
    117a:	bb 01 00 00 00       	mov    $0x1,%ebx
    117f:	44 39 e3             	cmp    %r12d,%ebx
    1182:	7d 60                	jge    11e4 <main+0x7f>
    1184:	48 63 c3             	movslq %ebx,%rax
    1187:	49 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%rdi
    118c:	ba 0a 00 00 00       	mov    $0xa,%edx
    1191:	be 00 00 00 00       	mov    $0x0,%esi
    1196:	e8 b5 fe ff ff       	callq  1050 <strtol@plt>
    119b:	48 89 c5             	mov    %rax,%rbp
    119e:	89 c7                	mov    %eax,%edi
    11a0:	e8 4f 00 00 00       	callq  11f4 <get_parity>
    11a5:	89 c2                	mov    %eax,%edx
    11a7:	89 ee                	mov    %ebp,%esi
    11a9:	48 8d 3d 67 0e 00 00 	lea    0xe67(%rip),%rdi        # 2017 <_IO_stdin_used+0x17>
    11b0:	b8 00 00 00 00       	mov    $0x0,%eax
    11b5:	e8 76 fe ff ff       	callq  1030 <printf@plt>
    11ba:	83 c3 01             	add    $0x1,%ebx
    11bd:	eb c0                	jmp    117f <main+0x1a>
    11bf:	48 8b 16             	mov    (%rsi),%rdx
    11c2:	48 8d 35 3b 0e 00 00 	lea    0xe3b(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    11c9:	48 8b 3d 90 2e 00 00 	mov    0x2e90(%rip),%rdi        # 4060 <stderr@@GLIBC_2.2.5>
    11d0:	b8 00 00 00 00       	mov    $0x0,%eax
    11d5:	e8 66 fe ff ff       	callq  1040 <fprintf@plt>
    11da:	bf 01 00 00 00       	mov    $0x1,%edi
    11df:	e8 7c fe ff ff       	callq  1060 <exit@plt>
    11e4:	b8 00 00 00 00       	mov    $0x0,%eax
    11e9:	48 83 c4 08          	add    $0x8,%rsp
    11ed:	5b                   	pop    %rbx
    11ee:	5d                   	pop    %rbp
    11ef:	41 5c                	pop    %r12
    11f1:	41 5d                	pop    %r13
    11f3:	c3                   	retq   

00000000000011f4 <get_parity>:
    11f4:	85 3c 25 01 00 00 00 	test   %edi,0x1
    11fb:	89 04 25 01 00 00 00 	mov    %eax,0x1
    1202:	0f 8a b8 f2 ff ff    	jp     4c0 <_init-0xb40>
    1208:	89 04 25 00 00 00 00 	mov    %eax,0x0
    120f:	c3                   	retq   

0000000000001210 <__libc_csu_init>:
    1210:	41 57                	push   %r15
    1212:	49 89 d7             	mov    %rdx,%r15
    1215:	41 56                	push   %r14
    1217:	49 89 f6             	mov    %rsi,%r14
    121a:	41 55                	push   %r13
    121c:	41 89 fd             	mov    %edi,%r13d
    121f:	41 54                	push   %r12
    1221:	4c 8d 25 c0 2b 00 00 	lea    0x2bc0(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1228:	55                   	push   %rbp
    1229:	48 8d 2d c0 2b 00 00 	lea    0x2bc0(%rip),%rbp        # 3df0 <__init_array_end>
    1230:	53                   	push   %rbx
    1231:	4c 29 e5             	sub    %r12,%rbp
    1234:	48 83 ec 08          	sub    $0x8,%rsp
    1238:	e8 c3 fd ff ff       	callq  1000 <_init>
    123d:	48 c1 fd 03          	sar    $0x3,%rbp
    1241:	74 1b                	je     125e <__libc_csu_init+0x4e>
    1243:	31 db                	xor    %ebx,%ebx
    1245:	0f 1f 00             	nopl   (%rax)
    1248:	4c 89 fa             	mov    %r15,%rdx
    124b:	4c 89 f6             	mov    %r14,%rsi
    124e:	44 89 ef             	mov    %r13d,%edi
    1251:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1255:	48 83 c3 01          	add    $0x1,%rbx
    1259:	48 39 dd             	cmp    %rbx,%rbp
    125c:	75 ea                	jne    1248 <__libc_csu_init+0x38>
    125e:	48 83 c4 08          	add    $0x8,%rsp
    1262:	5b                   	pop    %rbx
    1263:	5d                   	pop    %rbp
    1264:	41 5c                	pop    %r12
    1266:	41 5d                	pop    %r13
    1268:	41 5e                	pop    %r14
    126a:	41 5f                	pop    %r15
    126c:	c3                   	retq   
    126d:	0f 1f 00             	nopl   (%rax)

0000000000001270 <__libc_csu_fini>:
    1270:	c3                   	retq   

Disassembly of section .fini:

0000000000001274 <_fini>:
    1274:	48 83 ec 08          	sub    $0x8,%rsp
    1278:	48 83 c4 08          	add    $0x8,%rsp
    127c:	c3                   	retq   
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
parity.s: Assembler messages:
parity.s: Error: local label `"121" (instance number 1 of a fb label)' is not defined
make: *** [Makefile:9: parity.o] Error 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
parity.s: Assembler messages:
parity.s: Error: local label `"120" (instance number 1 of a fb label)' is not defined
make: *** [Makefile:9: parity.o] Error 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ m[Kemacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ jmpe[K[K[K[Kobjdump parity[K[K[K[K[K[K-d parity

parity:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <fprintf@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <fprintf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <strtol@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <strtol@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <exit@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <exit@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	31 ed                	xor    %ebp,%ebp
    1082:	49 89 d1             	mov    %rdx,%r9
    1085:	5e                   	pop    %rsi
    1086:	48 89 e2             	mov    %rsp,%rdx
    1089:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    108d:	50                   	push   %rax
    108e:	54                   	push   %rsp
    108f:	4c 8d 05 da 01 00 00 	lea    0x1da(%rip),%r8        # 1270 <__libc_csu_fini>
    1096:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 1210 <__libc_csu_init>
    109d:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 1165 <main>
    10a4:	ff 15 36 2f 00 00    	callq  *0x2f36(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10aa:	f4                   	hlt    
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 91 2f 00 00 	lea    0x2f91(%rip),%rdi        # 4048 <__TMC_END__>
    10b7:	48 8d 05 8a 2f 00 00 	lea    0x2f8a(%rip),%rax        # 4048 <__TMC_END__>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 61 2f 00 00 	lea    0x2f61(%rip),%rdi        # 4048 <__TMC_END__>
    10e7:	48 8d 35 5a 2f 00 00 	lea    0x2f5a(%rip),%rsi        # 4048 <__TMC_END__>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 c1 fe 03          	sar    $0x3,%rsi
    10f5:	48 89 f0             	mov    %rsi,%rax
    10f8:	48 c1 e8 3f          	shr    $0x3f,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	80 3d 41 2f 00 00 00 	cmpb   $0x0,0x2f41(%rip)        # 4068 <completed.7325>
    1127:	75 2f                	jne    1158 <__do_global_dtors_aux+0x38>
    1129:	55                   	push   %rbp
    112a:	48 83 3d c6 2e 00 00 	cmpq   $0x0,0x2ec6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1131:	00 
    1132:	48 89 e5             	mov    %rsp,%rbp
    1135:	74 0c                	je     1143 <__do_global_dtors_aux+0x23>
    1137:	48 8b 3d 02 2f 00 00 	mov    0x2f02(%rip),%rdi        # 4040 <__dso_handle>
    113e:	e8 2d ff ff ff       	callq  1070 <__cxa_finalize@plt>
    1143:	e8 68 ff ff ff       	callq  10b0 <deregister_tm_clones>
    1148:	c6 05 19 2f 00 00 01 	movb   $0x1,0x2f19(%rip)        # 4068 <completed.7325>
    114f:	5d                   	pop    %rbp
    1150:	c3                   	retq   
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	e9 7b ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001165 <main>:
    1165:	41 55                	push   %r13
    1167:	41 54                	push   %r12
    1169:	55                   	push   %rbp
    116a:	53                   	push   %rbx
    116b:	48 83 ec 08          	sub    $0x8,%rsp
    116f:	49 89 f5             	mov    %rsi,%r13
    1172:	83 ff 01             	cmp    $0x1,%edi
    1175:	7e 48                	jle    11bf <main+0x5a>
    1177:	41 89 fc             	mov    %edi,%r12d
    117a:	bb 01 00 00 00       	mov    $0x1,%ebx
    117f:	44 39 e3             	cmp    %r12d,%ebx
    1182:	7d 60                	jge    11e4 <main+0x7f>
    1184:	48 63 c3             	movslq %ebx,%rax
    1187:	49 8b 7c c5 00       	mov    0x0(%r13,%rax,8),%rdi
    118c:	ba 0a 00 00 00       	mov    $0xa,%edx
    1191:	be 00 00 00 00       	mov    $0x0,%esi
    1196:	e8 b5 fe ff ff       	callq  1050 <strtol@plt>
    119b:	48 89 c5             	mov    %rax,%rbp
    119e:	89 c7                	mov    %eax,%edi
    11a0:	e8 4f 00 00 00       	callq  11f4 <get_parity>
    11a5:	89 c2                	mov    %eax,%edx
    11a7:	89 ee                	mov    %ebp,%esi
    11a9:	48 8d 3d 67 0e 00 00 	lea    0xe67(%rip),%rdi        # 2017 <_IO_stdin_used+0x17>
    11b0:	b8 00 00 00 00       	mov    $0x0,%eax
    11b5:	e8 76 fe ff ff       	callq  1030 <printf@plt>
    11ba:	83 c3 01             	add    $0x1,%ebx
    11bd:	eb c0                	jmp    117f <main+0x1a>
    11bf:	48 8b 16             	mov    (%rsi),%rdx
    11c2:	48 8d 35 3b 0e 00 00 	lea    0xe3b(%rip),%rsi        # 2004 <_IO_stdin_used+0x4>
    11c9:	48 8b 3d 90 2e 00 00 	mov    0x2e90(%rip),%rdi        # 4060 <stderr@@GLIBC_2.2.5>
    11d0:	b8 00 00 00 00       	mov    $0x0,%eax
    11d5:	e8 66 fe ff ff       	callq  1040 <fprintf@plt>
    11da:	bf 01 00 00 00       	mov    $0x1,%edi
    11df:	e8 7c fe ff ff       	callq  1060 <exit@plt>
    11e4:	b8 00 00 00 00       	mov    $0x0,%eax
    11e9:	48 83 c4 08          	add    $0x8,%rsp
    11ed:	5b                   	pop    %rbx
    11ee:	5d                   	pop    %rbp
    11ef:	41 5c                	pop    %r12
    11f1:	41 5d                	pop    %r13
    11f3:	c3                   	retq   

00000000000011f4 <get_parity>:
    11f4:	85 3c 25 01 00 00 00 	test   %edi,0x1
    11fb:	89 04 25 01 00 00 00 	mov    %eax,0x1
    1202:	0f 8a b8 f2 ff ff    	jp     4c0 <_init-0xb40>
    1208:	89 04 25 00 00 00 00 	mov    %eax,0x0
    120f:	c3                   	retq   

0000000000001210 <__libc_csu_init>:
    1210:	41 57                	push   %r15
    1212:	49 89 d7             	mov    %rdx,%r15
    1215:	41 56                	push   %r14
    1217:	49 89 f6             	mov    %rsi,%r14
    121a:	41 55                	push   %r13
    121c:	41 89 fd             	mov    %edi,%r13d
    121f:	41 54                	push   %r12
    1221:	4c 8d 25 c0 2b 00 00 	lea    0x2bc0(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1228:	55                   	push   %rbp
    1229:	48 8d 2d c0 2b 00 00 	lea    0x2bc0(%rip),%rbp        # 3df0 <__init_array_end>
    1230:	53                   	push   %rbx
    1231:	4c 29 e5             	sub    %r12,%rbp
    1234:	48 83 ec 08          	sub    $0x8,%rsp
    1238:	e8 c3 fd ff ff       	callq  1000 <_init>
    123d:	48 c1 fd 03          	sar    $0x3,%rbp
    1241:	74 1b                	je     125e <__libc_csu_init+0x4e>
    1243:	31 db                	xor    %ebx,%ebx
    1245:	0f 1f 00             	nopl   (%rax)
    1248:	4c 89 fa             	mov    %r15,%rdx
    124b:	4c 89 f6             	mov    %r14,%rsi
    124e:	44 89 ef             	mov    %r13d,%edi
    1251:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1255:	48 83 c3 01          	add    $0x1,%rbx
    1259:	48 39 dd             	cmp    %rbx,%rbp
    125c:	75 ea                	jne    1248 <__libc_csu_init+0x38>
    125e:	48 83 c4 08          	add    $0x8,%rsp
    1262:	5b                   	pop    %rbx
    1263:	5d                   	pop    %rbp
    1264:	41 5c                	pop    %r12
    1266:	41 5d                	pop    %r13
    1268:	41 5e                	pop    %r14
    126a:	41 5f                	pop    %r15
    126c:	c3                   	retq   
    126d:	0f 1f 00             	nopl   (%rax)

0000000000001270 <__libc_csu_fini>:
    1270:	c3                   	retq   

Disassembly of section .fini:

0000000000001274 <_fini>:
    1274:	48 83 ec 08          	sub    $0x8,%rsp
    1278:	48 83 c4 08          	add    $0x8,%rsp
    127c:	c3                   	retq   
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ par[K[K[K./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ echo "whatever"
whatever
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ echo "I quite literally had no i nterat[Kction with the stakc so[K[K[K[K[Kck so idk how I got a seg fault like that bro"
I quite literally had no interaction with the stack so idk how I got a seg fault like that bro
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ cd - 
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd rip
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ cd -
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs pari[K[K[K[K[K[K[K[K[K[Kmake
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3 4
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ echo "that's n[K[K[K[Ks not my fault then, t he parity.s code here literlaly[K[K[K[Kally just sets p[Keas[Kx to 1.[K"
thats not my fault then, the parity.s code here literally just sets eax to 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -g -Wall -std=c11 -Og   -c -o main.o main.c
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs par[K[K[K[K[K[K[K[K[Kmake
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity
usage: ./parity INT1...
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
parity(1) = 1
parity(2) = 2
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3[K[K[K[K[K[K[K[K[K[K[K[K[K[Kemacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
make: 'parity' is up to date.
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 12[K 2 3 4 5 6 7 8
parity(1) = 1
parity(2) = 2
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
parity(1) = 1
parity(2) = 2
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./paruit[K[K[Kity 1 2 3
parity(1) = 1
parity(2) = 2
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
parity(1) = 1
parity(2) = 2
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 12[K 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
^[[A    bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
parity.s: Assembler messages:
parity.s:8: Error: no such instruction: `odd_parity'
make: *** [Makefile:9: parity.o] Error 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs P[Kparity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
parity.s: Assembler messages:
parity.s:5: Error: bad register name `%1'
make: *** [Makefile:9: parity.o] Error 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ makes[K[K[K[K[Kemacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./pariuty[K[K[Kty 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ emacs parity.s
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity.s[K[K[K[K[K[K[K[K[K[Kmake
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1[K[K[K[K[K[K[K[K[K[Kmake
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity.s[K[K 1 2
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ echo "jfc i don't [K[K[Kt know anymore"
jfc i dont know anymore
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ cd -
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd rip
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ makje[K[Ke
cc -Wall -Og -std=c11 -S rip.c
cc -Wall -Og -std=c11    rip.c   -o rip
objdump -d rip > rip.dump
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ l[K./rip
&get_rip() = 0x56012ff8a135; rip = 0x56012ff8a13c
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ objdump rip.c[K[K[K[K[K-d rip

rip:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <printf@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <printf@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001040 <__cxa_finalize@plt>:
    1040:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1046:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001050 <_start>:
    1050:	31 ed                	xor    %ebp,%ebp
    1052:	49 89 d1             	mov    %rdx,%r9
    1055:	5e                   	pop    %rsi
    1056:	48 89 e2             	mov    %rsp,%rdx
    1059:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    105d:	50                   	push   %rax
    105e:	54                   	push   %rsp
    105f:	4c 8d 05 6a 01 00 00 	lea    0x16a(%rip),%r8        # 11d0 <__libc_csu_fini>
    1066:	48 8d 0d 03 01 00 00 	lea    0x103(%rip),%rcx        # 1170 <__libc_csu_init>
    106d:	48 8d 3d c9 00 00 00 	lea    0xc9(%rip),%rdi        # 113d <main>
    1074:	ff 15 66 2f 00 00    	callq  *0x2f66(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    107a:	f4                   	hlt    
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001080 <deregister_tm_clones>:
    1080:	48 8d 3d a9 2f 00 00 	lea    0x2fa9(%rip),%rdi        # 4030 <__TMC_END__>
    1087:	48 8d 05 a2 2f 00 00 	lea    0x2fa2(%rip),%rax        # 4030 <__TMC_END__>
    108e:	48 39 f8             	cmp    %rdi,%rax
    1091:	74 15                	je     10a8 <deregister_tm_clones+0x28>
    1093:	48 8b 05 3e 2f 00 00 	mov    0x2f3e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    109a:	48 85 c0             	test   %rax,%rax
    109d:	74 09                	je     10a8 <deregister_tm_clones+0x28>
    109f:	ff e0                	jmpq   *%rax
    10a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10a8:	c3                   	retq   
    10a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010b0 <register_tm_clones>:
    10b0:	48 8d 3d 79 2f 00 00 	lea    0x2f79(%rip),%rdi        # 4030 <__TMC_END__>
    10b7:	48 8d 35 72 2f 00 00 	lea    0x2f72(%rip),%rsi        # 4030 <__TMC_END__>
    10be:	48 29 fe             	sub    %rdi,%rsi
    10c1:	48 c1 fe 03          	sar    $0x3,%rsi
    10c5:	48 89 f0             	mov    %rsi,%rax
    10c8:	48 c1 e8 3f          	shr    $0x3f,%rax
    10cc:	48 01 c6             	add    %rax,%rsi
    10cf:	48 d1 fe             	sar    %rsi
    10d2:	74 14                	je     10e8 <register_tm_clones+0x38>
    10d4:	48 8b 05 15 2f 00 00 	mov    0x2f15(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10db:	48 85 c0             	test   %rax,%rax
    10de:	74 08                	je     10e8 <register_tm_clones+0x38>
    10e0:	ff e0                	jmpq   *%rax
    10e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10e8:	c3                   	retq   
    10e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010f0 <__do_global_dtors_aux>:
    10f0:	80 3d 39 2f 00 00 00 	cmpb   $0x0,0x2f39(%rip)        # 4030 <__TMC_END__>
    10f7:	75 2f                	jne    1128 <__do_global_dtors_aux+0x38>
    10f9:	55                   	push   %rbp
    10fa:	48 83 3d f6 2e 00 00 	cmpq   $0x0,0x2ef6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1101:	00 
    1102:	48 89 e5             	mov    %rsp,%rbp
    1105:	74 0c                	je     1113 <__do_global_dtors_aux+0x23>
    1107:	48 8b 3d 1a 2f 00 00 	mov    0x2f1a(%rip),%rdi        # 4028 <__dso_handle>
    110e:	e8 2d ff ff ff       	callq  1040 <__cxa_finalize@plt>
    1113:	e8 68 ff ff ff       	callq  1080 <deregister_tm_clones>
    1118:	c6 05 11 2f 00 00 01 	movb   $0x1,0x2f11(%rip)        # 4030 <__TMC_END__>
    111f:	5d                   	pop    %rbp
    1120:	c3                   	retq   
    1121:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1128:	c3                   	retq   
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <frame_dummy>:
    1130:	e9 7b ff ff ff       	jmpq   10b0 <register_tm_clones>

0000000000001135 <get_rip>:
    1135:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 113c <get_rip+0x7>
    113c:	c3                   	retq   

000000000000113d <main>:
    113d:	48 83 ec 08          	sub    $0x8,%rsp
    1141:	e8 ef ff ff ff       	callq  1135 <get_rip>
    1146:	48 89 c2             	mov    %rax,%rdx
    1149:	48 8d 35 e5 ff ff ff 	lea    -0x1b(%rip),%rsi        # 1135 <get_rip>
    1150:	48 8d 3d ad 0e 00 00 	lea    0xead(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1157:	b8 00 00 00 00       	mov    $0x0,%eax
    115c:	e8 cf fe ff ff       	callq  1030 <printf@plt>
    1161:	b8 00 00 00 00       	mov    $0x0,%eax
    1166:	48 83 c4 08          	add    $0x8,%rsp
    116a:	c3                   	retq   
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <__libc_csu_init>:
    1170:	41 57                	push   %r15
    1172:	49 89 d7             	mov    %rdx,%r15
    1175:	41 56                	push   %r14
    1177:	49 89 f6             	mov    %rsi,%r14
    117a:	41 55                	push   %r13
    117c:	41 89 fd             	mov    %edi,%r13d
    117f:	41 54                	push   %r12
    1181:	4c 8d 25 60 2c 00 00 	lea    0x2c60(%rip),%r12        # 3de8 <__frame_dummy_init_array_entry>
    1188:	55                   	push   %rbp
    1189:	48 8d 2d 60 2c 00 00 	lea    0x2c60(%rip),%rbp        # 3df0 <__init_array_end>
    1190:	53                   	push   %rbx
    1191:	4c 29 e5             	sub    %r12,%rbp
    1194:	48 83 ec 08          	sub    $0x8,%rsp
    1198:	e8 63 fe ff ff       	callq  1000 <_init>
    119d:	48 c1 fd 03          	sar    $0x3,%rbp
    11a1:	74 1b                	je     11be <__libc_csu_init+0x4e>
    11a3:	31 db                	xor    %ebx,%ebx
    11a5:	0f 1f 00             	nopl   (%rax)
    11a8:	4c 89 fa             	mov    %r15,%rdx
    11ab:	4c 89 f6             	mov    %r14,%rsi
    11ae:	44 89 ef             	mov    %r13d,%edi
    11b1:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    11b5:	48 83 c3 01          	add    $0x1,%rbx
    11b9:	48 39 dd             	cmp    %rbx,%rbp
    11bc:	75 ea                	jne    11a8 <__libc_csu_init+0x38>
    11be:	48 83 c4 08          	add    $0x8,%rsp
    11c2:	5b                   	pop    %rbx
    11c3:	5d                   	pop    %rbp
    11c4:	41 5c                	pop    %r12
    11c6:	41 5d                	pop    %r13
    11c8:	41 5e                	pop    %r14
    11ca:	41 5f                	pop    %r15
    11cc:	c3                   	retq   
    11cd:	0f 1f 00             	nopl   (%rax)

00000000000011d0 <__libc_csu_fini>:
    11d0:	c3                   	retq   

Disassembly of section .fini:

00000000000011d4 <_fini>:
    11d4:	48 83 ec 08          	sub    $0x8,%rsp
    11d8:	48 83 c4 08          	add    $0x8,%rsp
    11dc:	c3                   	retq   
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ objdump [K[K[K[K[K[K[K[Kcd =[K- 
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd rsp.c[K[K
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rsp$ ena[K[K[Kcd -
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd rip
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ emacs rip
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ emacs rip.c
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ echo "cool"
cool
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rip$ emacs[K[K[K[K[Kcd - 
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd ri[Ksp
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rsp$ emacs rsp
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rsp$ emacs re[Ksp.c
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rsp$ make
cc -Wall -Og -std=c11 -S rsp.c
cc -Wall -Og -std=c11    rsp.c   -o rsp
objdump -d rsp > rsp.dump
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rsp$ re[K[K./rsp
&stkVar = 0x7ffdc70d83bc; rsp = 0x7ffdc70d83a8
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rsp$ echo "hooray!:[K"
hooray!
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/rsp$ mak[K[K[Kcd - [K
/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises$ cd parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./pariuty[K[K[Kty 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3[K[K[K[K[K[K[K[K[K[K[K[K[K[Kmake
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
parity(1) = 1
parity(2) = 2
parity(3) = 3
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3[K4[K3 4 5 6
parity(1) = 1
parity(2) = 2
parity(3) = 3
parity(4) = 4
parity(5) = 5
parity(6) = 6
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3 4 5 6[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[K[Kmake
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity
usage: ./parity INT1...
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ,.oarut[K[K[K[K[K[K[K./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ make
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
Segmentation fault
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3[Kmake
cc -c -g -Wall -std=c11 -Og parity.s -o parity.o
cc main.o parity.o -o parity
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3
parity(1) = 0
parity(2) = 0
parity(3) = 1
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 3 4 5 6 7
parity(1) = 0
parity(2) = 0
parity(3) = 1
parity(4) = 0
parity(5) = 1
parity(6) = 1
parity(7) = 0
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ ./parity 1 2 34 [K[K 4 5 6 7 15 21
parity(1) = 0
parity(2) = 0
parity(3) = 1
parity(4) = 0
parity(5) = 1
parity(6) = 1
parity(7) = 0
parity(15) = 1
parity(21) = 0
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ echo "FINALLY:[K" "i"m" "a"n" "i"d"i"o"t"
FINALLY im an idiot
bestus1@remote04:/import/linux/home1/bestus1/projects/i220a/submit/lab9/exercises/parity$ exit
exit

Script done on 2020-11-01 18:21:32-05:00 [COMMAND_EXIT_CODE="0"]
